name: "Build protocol"

defaults:
  run:
    shell: "sh"

on:
  workflow_dispatch:
    inputs:
      network-group:
        description: "Network's group"
        type: "choice"
        options:
          - "dev"
          - "main"
          - "test"
        required: true
      network:
        description: "Network's name"
        type: "string"
        required: true
      protocol:
        description: "Protocol"
        type: "string"
        required: true
      release:
        description: "Smart contracts release"
        type: "string"
        required: true

env:
  profile: |-
    ${{ ((inputs.network-group == 'dev' || inputs.network-group == 'test') && 'test-net') || (inputs.network-group == 'main' && 'production-net') || 'N/A' }}

run-name: |-
  ${{ inputs.network-group }} / ${{ inputs.network }} / ${{ inputs.protocol }} / ${{ inputs.release }}

jobs:
  report-arguments:
    name: "Report workflow arguments"
    runs-on: "ubuntu-latest"
    env:
      network_group: |-
        ${{ inputs.network-group }}
      network: |-
        ${{ inputs.network }}
      protocol: |-
        ${{ inputs.protocol }}
      release: |-
        ${{ inputs.release }}
    steps:
      - run: |-
          set -eu

          "echo" \
            "\
          Argument          | Value
          ------------------|------
          Network Group     | ${network_group:?}
          Network Name      | ${network:?}
          Protocol Name     | ${protocol:?}
          Contracts Release | ${release:?}
          Build Profile     | ${profile:?}" \
            >>"${GITHUB_STEP_SUMMARY:?}"
  build-protocol:
    name: "Build protocol"
    needs:
      - "report-arguments"
    runs-on: "ubuntu-latest"
    env:
      topology_dir: |-
        ${{ inputs.network-group }}net/${{ inputs.network }}/
      topology_json: |-
        ${{ inputs.network-group }}net/${{ inputs.network }}/topology.json
      protocols_dir: |-
        ${{ inputs.network-group }}net/${{ inputs.network }}/protocols/
      protocol_json: |-
        ${{ inputs.network-group }}net/${{ inputs.network }}/protocols/${{ inputs.protocol }}.json
    steps:
      - uses: "actions/checkout@v5"
        with:
          sparse-checkout: |-
            ./
            ci/
            ${{ env.topology_dir }}
            ${{ env.protocols_dir }}
      - uses: "nolus-protocol/actions/setup-docker@v1"
      - id: "fetch-and-decompress"
        uses: "nolus-protocol/actions/build-image@v1"
        with:
          context: "./ci"
          file: "./ci/Containerfile"
          target: "fetch-and-decompress"
      - env:
          image_tag: |-
            ${{ steps.fetch-and-decompress.outputs.tag }}
          owner: |-
            ${{ github.repository_owner }}
          release: |-
            ${{ inputs.release }}
          repository: "nolus-money-market"
        run: |-
          set -eu

          "docker" \
            "container" \
            "run" \
            --rm \
            --tty \
            --volume ".:/bind:rw" \
            "${image_tag:?}" \
            "--owner" "${owner:?}" \
            "--repository" "${repository:?}" \
            "--release" "${release:?}" \
            "--file" "build-protocol.tar.gz"
      - run: |-
          "docker" \
            "image" \
            "load" \
            --input "./build-protocol.tar"
      - run: |-
          set -eu

          "mkdir" "./artifacts/"

          "mkdir" "./build-configuration/"

          "cp" \
            "${protocol_json:?}" \
            "./build-configuration/protocol.json"

          "cp" \
            "${topology_json:?}" \
            "./build-configuration/topology.json"
      - env:
          network: |-
            ${{ inputs.network }}
          protocol: |-
            ${{ inputs.protocol }}
        run: |-
          set -eu

          "docker" \
            "container" \
            "run" \
            --env "PROTOCOL_NETWORK=${network:?}" \
            --env "PROTOCOL_NAME=${protocol:?}" \
            --rm \
            --volume "./artifacts:/artifacts/:rw" \
            --volume "./build-configuration:/src/build-configuration/:ro" \
            "localhost/local/build-protocol" \
            "${profile:?}"
      - uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: |-
            ${{ inputs.network-group }}--${{ inputs.network }}--${{ inputs.protocol }}--${{ inputs.release }}
          path: |-
            ./artifacts/*
